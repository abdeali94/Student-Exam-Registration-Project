{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CrudHttpService = /*#__PURE__*/(() => {\n  class CrudHttpService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:3000/student_data';\n      this.apiUrlnew = 'http://localhost:3000/admin_data';\n      this.headers = new HttpHeaders().set('Content-Type', 'application/json');\n    } // Create\n\n\n    create(data) {\n      let API_URL = `${this.apiUrl}`;\n      return this.http.post(API_URL, data).pipe(catchError(this.handleError));\n    } // Read\n\n\n    list() {\n      return this.http.get(`${this.apiUrl}`);\n    }\n\n    list_new() {\n      return this.http.get(`${this.apiUrlnew}`);\n    } // Update\n\n\n    update(id, data) {\n      let API_URL = `${this.apiUrl}/${id}`;\n      return this.http.put(API_URL, data, {\n        headers: this.headers\n      }).pipe(catchError(this.handleError));\n    } // Delete\n\n\n    delete(id) {\n      var API_URL = `${this.apiUrl}/${id}`;\n      return this.http.delete(API_URL).pipe(catchError(this.handleError));\n    } // Handle API errors\n\n\n    handleError(error) {\n      if (error.error instanceof ErrorEvent) {\n        console.error('An error occurred:', error.error.message);\n      } else {\n        console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\n      }\n\n      return throwError('Something bad happened; please try again later.');\n    }\n\n  }\n\n  CrudHttpService.ɵfac = function CrudHttpService_Factory(t) {\n    return new (t || CrudHttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CrudHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudHttpService,\n    factory: CrudHttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudHttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}